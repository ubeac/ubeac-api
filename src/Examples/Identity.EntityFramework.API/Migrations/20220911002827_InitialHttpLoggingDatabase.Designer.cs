// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using uBeac.Web.Logging.EntityFramework;

#nullable disable

namespace Identity.EntityFramework.API.Migrations
{
    [DbContext(typeof(HttpLogDbContext))]
    [Migration("20220911002827_InitialHttpLoggingDatabase")]
    partial class InitialHttpLoggingDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("uBeac.Web.Logging.HttpLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssemblyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssemblyVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<string>("EnvironmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MemoryUsage")
                        .HasColumnType("bigint");

                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<int>("ThreadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HttpLog");
                });

            modelBuilder.Entity("uBeac.Web.Logging.HttpLog", b =>
                {
                    b.OwnsOne("uBeac.Web.Logging.ExceptionModel", "Exception", b1 =>
                        {
                            b1.Property<Guid>("HttpLogId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("HResult")
                                .HasColumnType("int");

                            b1.Property<string>("HelpLink")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Message")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Source")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StackTrace")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("HttpLogId");

                            b1.ToTable("HttpLog");

                            b1.WithOwner()
                                .HasForeignKey("HttpLogId");
                        });

                    b.OwnsOne("uBeac.Web.Logging.HttpRequestLog", "Request", b1 =>
                        {
                            b1.Property<Guid>("HttpLogId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Body")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long?>("ContentLength")
                                .HasColumnType("bigint");

                            b1.Property<string>("ContentType")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DisplayUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Headers")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Method")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Path")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PathBase")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Protocol")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("QueryString")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Scheme")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("HttpLogId");

                            b1.ToTable("HttpLog");

                            b1.WithOwner()
                                .HasForeignKey("HttpLogId");
                        });

                    b.OwnsOne("uBeac.Web.Logging.HttpResponseLog", "Response", b1 =>
                        {
                            b1.Property<Guid>("HttpLogId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Body")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long?>("ContentLength")
                                .HasColumnType("bigint");

                            b1.Property<string>("ContentType")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Headers")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("HttpLogId");

                            b1.ToTable("HttpLog");

                            b1.WithOwner()
                                .HasForeignKey("HttpLogId");
                        });

                    b.Navigation("Exception");

                    b.Navigation("Request");

                    b.Navigation("Response");
                });
#pragma warning restore 612, 618
        }
    }
}
